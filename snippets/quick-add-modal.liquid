<div id="product-popup" class="popup-overlay" style="display: none;">
  <div class="popup-container">
    <button class="popup-close" onclick="closePopup()">Ã—</button>
    <div class="popup-content">
      <div class="popup-top-section">
        <div class="product-image">
          <img id="popup-product-image" src="/placeholder.svg" alt="" width="120" height="140">
        </div>
        <div class="product-basic-details">
          <h2 id="popup-product-title" class="product-title"></h2>
          <p id="popup-product-price" class="product-price"></p>
          <p id="popup-product-description" class="product-description"></p>
        </div>
      </div>
      <div class="popup-bottom-section">
        <div class="option-group">
          <label class="option-label">Color</label>
          <div id="popup-color-options" class="color-options"></div>
        </div>
        <div class="option-group">
          <label class="option-label">Size</label>
          <div class="size-dropdown-container">
            <select id="popup-size-select" class="size-dropdown">
              <option value="">Choose your size</option>
            </select>
            <div class="dropdown-arrow-container">
              <svg class="dropdown-arrow" viewBox="0 0 14 8" fill="none">
                <path d="M1 1L7 7L13 1" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
          </div>
        </div>
        <button class="add-to-cart-btn" onclick="addToCart()">
          ADD TO CART
          <svg class="arrow-icon" width="22" height="12" viewBox="0 0 24 12" fill="none">
            <line x1="5" y1="6" x2="19" y2="6"></line>
            <polyline points="12,1 19,6 12,11"></polyline>
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<div style="padding: 20px; text-align: center;">
  <button
    onclick="openPopup()"
    style="padding: 10px 20px; background: #000; color: white; border: none; cursor: pointer; margin-right: 10px;"
  >
    Open Product Popup
  </button>
  <button
    onclick="testCart()"
    style="padding: 10px 20px; background: #007cba; color: white; border: none; cursor: pointer;"
  >
    Test Cart
  </button>
</div>

<style>
  :root {
    --popup-width: 311px;
    --popup-height: 447px;
  }
  body {
    font-family: 'Jost', sans-serif;
    margin: 0;
    padding: 0;
    background: #f2f2f2;
  }
  .popup-overlay {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
  }
  .popup-container {
    position: relative;
    width: var(--popup-width);
    height: var(--popup-height);
    background: #fff;
    display: flex;
    flex-direction: column;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    animation: popupFadeIn 0.25s ease-out;
    border-radius: 4px;
    overflow: hidden;
  }
  @keyframes popupFadeIn {
    from {
      opacity: 0;
      transform: scale(0.97);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  .popup-close {
    position: absolute;
    top: 10px;
    right: 10px;
    width: 30px;
    height: 30px;
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    z-index: 10;
  }
  .popup-content {
    display: flex;
    flex-direction: column;
    height: 100%;
    padding: 20px;
  }
  .popup-top-section {
    display: flex;
    gap: 16px;
    margin-bottom: 20px;
  }
  .product-image img {
    width: 120px;
    height: 140px;
    object-fit: cover;
    border-radius: 4px;
  }
  .product-basic-details {
    flex: 1;
  }
  .product-title {
    font-size: 18px;
    font-weight: 600;
    margin: 0 0 8px 0;
    line-height: 1.3;
  }
  .product-price {
    font-size: 16px;
    font-weight: 500;
    margin: 0 0 8px 0;
    color: #333;
  }
  .product-description {
    font-size: 14px;
    color: #666;
    margin: 0;
    line-height: 1.4;
  }
  .popup-bottom-section {
    display: flex;
    flex-direction: column;
    gap: 16px;
    flex: 1;
  }
  .option-group {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }
  .option-label {
    font-size: 14px;
    font-weight: 500;
    color: #333;
  }
  .color-options {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
  }
  .color-option {
    padding: 8px 16px;
    border: 1px solid #ddd;
    background: #fff;
    border-radius: 4px;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.2s;
  }
  .color-option:hover {
    border-color: #000;
  }
  .color-option.active {
    background: #000;
    color: #fff;
    border-color: #000;
  }
  .size-dropdown-container {
    position: relative;
  }
  .size-dropdown {
    width: 100%;
    height: 42px;
    border: 1px solid #000;
    padding: 0 15px;
    background: #fff;
    cursor: pointer;
    font-size: 15px;
    appearance: none;
    color: #333;
    font-weight: 400;
    outline: none;
    border-radius: 0;
    padding-right: 40px;
    text-align: left;
  }
  .dropdown-arrow-container {
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    width: 42px;
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: none;
    border: 1px solid #111010;
    background-color: #f9f9f9;
  }
  .dropdown-arrow {
    width: 14px;
    height: 8px;
    pointer-events: none;
  }
  .add-to-cart-btn {
    font-family: 'Jost';
    width: 100%;
    height: 45px;
    background: #000;
    color: #fff;
    border: none;
    font-weight: 300;
    font-size: 14px;
    letter-spacing: 0;
    text-transform: uppercase;
    cursor: pointer;
    display: flex;
    align-items: center;
    line-height: 20.48px;
    justify-content: center;
    transition: all 0.3s ease;
    gap: 10px;
    padding: 0 20px;
    margin-top: auto;
  }
  .add-to-cart-btn:hover {
    background: #222;
    transform: translateY(-2px);
  }
  .add-to-cart-btn:active {
    transform: translateY(0);
  }
  .add-to-cart-btn .arrow-icon {
    width: 22px;
    height: 12px;
    transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
  }
  .add-to-cart-btn:hover .arrow-icon {
    transform: translateX(6px);
  }
  @media (max-width: 420px) {
    .popup-container {
      width: calc(100% - 40px);
      height: auto;
      max-height: 90vh;
    }
    .popup-content {
      padding: 14px;
    }
    .popup-top-section {
      flex-direction: column;
      gap: 12px;
    }
    .product-image img {
      width: 100%;
      height: auto;
    }
  }
</style>

<script>
  function openPopup(data) {
    if (!data) {
      data = {
        title: 'Demo Product',
        price: '$99.99',
        image: '/placeholder.svg?height=600&width=400',
        description: 'Demo product for testing.',
        colors: ['Black', 'White', 'Red'],
        sizes: ['S', 'M', 'L', 'XL'],
        variantId: '123456789',
        variants: [
          { id: '123456789', option1: 'Black', option2: 'S', available: true },
          { id: '123456790', option1: 'Black', option2: 'M', available: true },
          { id: '123456791', option1: 'White', option2: 'S', available: true },
          { id: '123456792', option1: 'White', option2: 'M', available: true },
        ],
      };
    }
    window.currentProductData = data;
    document.getElementById('product-popup').style.display = 'flex';
    document.body.style.overflow = 'hidden';

    document.getElementById('popup-product-title').textContent = data.title;
    document.getElementById('popup-product-price').textContent = data.price;
    document.getElementById('popup-product-image').src = data.image;
    document.getElementById('popup-product-description').textContent = data.description;

    const colorContainer = document.getElementById('popup-color-options');
    colorContainer.innerHTML = data.colors
      .map(
        (color, i) =>
          `<button class="color-option ${i === 0 ? 'active' : ''}" onclick="selectColor(this)">${color}</button>`
      )
      .join('');

    const sizeSelect = document.getElementById('popup-size-select');
    sizeSelect.innerHTML =
      '<option value="">Choose your size</option>' +
      data.sizes.map((size) => `<option value="${size}">${size}</option>`).join('');
  }

  function selectColor(btn) {
    document.querySelectorAll('.color-option').forEach((opt) => opt.classList.remove('active'));
    btn.classList.add('active');
  }

  function closePopup() {
    document.getElementById('product-popup').style.display = 'none';
    document.body.style.overflow = 'auto';
  }

  function addToCart() {
    const selectedColor = document.querySelector('.color-option.active')?.textContent;
    const selectedSize = document.getElementById('popup-size-select').value;

    if (!selectedSize) {
      alert('Please select a size');
      return;
    }

    const productData = window.currentProductData;
    if (!productData) {
      alert('Unable to add to cart. Please try again.');
      return;
    }

    let variantId = productData.variantId;
    if (!variantId && productData.variants?.length > 0) {
      const variant =
        productData.variants.find(
          (v) =>
            (!selectedColor ||
              v.option1 === selectedColor ||
              v.option2 === selectedColor ||
              v.option3 === selectedColor) &&
            (!selectedSize || v.option1 === selectedSize || v.option2 === selectedSize || v.option3 === selectedSize)
        ) || productData.variants.find((v) => v.available !== false);
      variantId = variant?.id;
    }

    if (!variantId) {
      alert('Unable to add to cart. Please try again.');
      return;
    }

    const addToCartBtn = document.querySelector('.add-to-cart-btn');
    addToCartBtn.innerHTML = 'Adding...';
    addToCartBtn.disabled = true;

    const formData = new FormData();
    formData.append('id', variantId);
    formData.append('quantity', '1');

    fetch(Theme.routes.cart_add_url, { method: 'POST', body: formData, headers: { Accept: 'application/json' } })
      .then((response) => (response.ok ? response.json() : Promise.reject(new Error(`HTTP ${response.status}`))))
      .then((data) => {
        if (data.status) {
          alert('Error adding to cart: ' + (data.message || 'Unknown error'));
        } else {
          document.dispatchEvent(
            new CustomEvent('cart:update', {
              detail: {
                resource: data,
                sourceId: 'quick-add-modal',
                data: {
                  didError: false,
                  source: 'quick-add-modal',
                  itemCount: 1,
                  productId: productData.id,
                  variantId,
                },
              },
              bubbles: true,
            })
          );
          alert('Added to cart!');
          closePopup();
        }
      })
      .catch((error) => {
        console.error('Error:', error);
        alert('Error adding to cart. Please try again.');
      })
      .finally(() => {
        addToCartBtn.innerHTML = 'ADD TO CART';
        addToCartBtn.disabled = false;
      });
  }

  function testCart() {
    console.log('Testing cart...');
    fetch(Theme.routes.cart_url + '.js')
      .then((r) => r.json())
      .then((d) => console.log('Cart:', d))
      .catch((e) => console.error('Cart error:', e));
  }

  document.addEventListener('click', function (e) {
    const button = e.target.closest('button, a');
    if (button && (button.textContent.includes('+') || button.classList.contains('quick-add'))) {
      const productContainer = button.closest('.product-item, .product-card, .grid-product, .product, [data-product]');
      if (productContainer) {
        const title = productContainer.querySelector('.product-title, .product-name, h3, h2')?.textContent?.trim();
        const price = productContainer.querySelector('.price, .product-price, .money')?.textContent?.trim();
        const image = productContainer.querySelector('img')?.src;
        const productId =
          productContainer.dataset.productId ||
          productContainer.querySelector('[data-product-id]')?.dataset.productId ||
          productContainer.id?.replace('product-card-', '');
        const variantId =
          productContainer.querySelector('input[data-variant-id]:checked')?.dataset.variantId ||
          productContainer.querySelector('form[data-type="add-to-cart-form"] input[name="id"]')?.value;

        if (title || price) {
          const productData = {
            id: productId,
            title: title || 'Product Name',
            price: price || 'Price not available',
            image: image || '/placeholder.svg?height=600&width=400',
            description: 'Premium product with attention to detail.',
            colors: ['Black', 'White'],
            sizes: ['XS', 'S', 'M', 'L', 'XL'],
            variantId,
            variants: [],
          };
          e.preventDefault();
          openPopup(productData);
        }
      }
    }
  });

  document.addEventListener('DOMContentLoaded', function () {
    const popupOverlay = document.getElementById('product-popup');
    if (popupOverlay) {
      popupOverlay.addEventListener('click', function (e) {
        if (e.target === this) closePopup();
      });
    }
  });
</script>
